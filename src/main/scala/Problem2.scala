package projectEuler

/** Problem 2
  *
  * Each new term in the Fibonacci sequence is generated by adding the previous
  * two terms. By starting with 1 and 2, the first 10 terms will be:
  *
  * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  *
  * By considering the terms in the Fibonacci sequence whose values do not
  * exceed four million, find the sum of the even-valued terms.
  */
class Problem2 {
  val seed = Seq(1, 2)
  val max = 4000000

  def solution = {
    fib(seed).filter((f: Int) => (f % 2) == 0).sum
  }

  def fib(current: Seq[Int]): Seq[Int] = {
    current.takeRight(2).sum match {
      case n if n <= max => fib(current :+ n)
      case _ => current
    }
  }
}
